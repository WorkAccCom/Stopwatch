{"version":3,"sources":["components/buttons/Buttons.tsx","App.tsx","index.tsx"],"names":["Buttons","startStopwatchFunc","stopStopwatchFunc","id","useState","startOrStop","startOrStopSwitcher","className","type","onClick","App","seconds","changeSecondsValue","timerId","changeTimerId","sec","secondsRest","minutes","minutesRest","hours","convertSeconds","window","setInterval","s","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAQaA,EAA2B,SAAC,GAIlC,IAHLC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,GAEA,EAA2CC,mBAAS,SAApD,mBAAOC,EAAP,KAAoBC,EAApB,KAYA,OACE,qBAAKC,UAAU,UAAf,SACE,wBACEC,KAAK,SACLC,QAd2B,WACX,UAAhBJ,GACFC,EAAoB,QACpBL,MAEAK,EAAoB,SACpBJ,EAAkBC,KAShBI,UAAU,kBAHZ,SAKGF,OC5BIK,EAAgB,WAC3B,MAAsCN,mBAAS,GAA/C,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAiCR,mBAAS,GAA1C,mBAAOS,EAAP,KAAgBC,EAAhB,KA8BA,OACE,sBAAKP,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,uBAGA,mBAAGA,UAAU,mBAAb,SAtBmB,SAACQ,GACtB,IAAMC,EAAcD,EAAM,GACpBE,GAAWF,EAAMC,GAAe,GAChCE,EAAcD,EAAU,GACxBE,GAASF,EAAUC,GAAe,GAExC,MAAM,GAAN,OAEIC,GAAS,GAAKA,EAAd,WAA0BA,GAF9B,YAIID,GAAe,GAAKA,EAApB,WAAsCA,GAJ1C,YAMIF,GAAe,GAAKA,EAApB,WAAsCA,IAWrCI,CAAeT,KAElB,qBAAKJ,UAAU,qBAAf,SACE,cAAC,EAAD,CACEN,mBAtCe,WACrB,IAAME,EAAKkB,OAAOC,aAAY,kBAAMV,GAAmB,SAACW,GAAD,OAAOA,EAAI,OAAI,KAEtET,EAAcX,IAoCRD,kBAjCc,SAACC,GACrBkB,OAAOG,cAAcrB,GACrBS,EAAmB,IAgCbT,GAAIU,UC3CdY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2a836090.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ninterface Props {\n  startStopwatchFunc: () => void,\n  stopStopwatchFunc: (id: number) => void,\n  id: number,\n}\n\nexport const Buttons: React.FC<Props> = ({\n  startStopwatchFunc,\n  stopStopwatchFunc,\n  id,\n}) => {\n  const [startOrStop, startOrStopSwitcher] = useState('Start');\n\n  const startOrStopOnClickAction = () => {\n    if (startOrStop === 'Start') {\n      startOrStopSwitcher('Stop');\n      startStopwatchFunc();\n    } else {\n      startOrStopSwitcher('Start');\n      stopStopwatchFunc(id);\n    }\n  };\n\n  return (\n    <div className=\"Buttons\">\n      <button\n        type=\"button\"\n        onClick={startOrStopOnClickAction}\n        className=\"Buttons__button\"\n      >\n        {startOrStop}\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Buttons } from './components/buttons';\n\nexport const App: React.FC = () => {\n  const [seconds, changeSecondsValue] = useState(0);\n  const [timerId, changeTimerId] = useState(0);\n\n  const startStopwatch = () => {\n    const id = window.setInterval(() => changeSecondsValue((s) => s + 1), 1000);\n\n    changeTimerId(id);\n  };\n\n  const stopStopwatch = (id: number) => {\n    window.clearInterval(id);\n    changeSecondsValue(0);\n  };\n\n  const convertSeconds = (sec: number) => {\n    const secondsRest = sec % 60;\n    const minutes = (sec - secondsRest) / 60;\n    const minutesRest = minutes % 60;\n    const hours = (minutes - minutesRest) / 60;\n\n    return (\n      `${\n        hours >= 10 ? hours : `0${hours}`\n      }:${\n        minutesRest >= 10 ? minutesRest : `0${minutesRest}`\n      }:${\n        secondsRest >= 10 ? secondsRest : `0${secondsRest}`\n      }`\n    );\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <h1 className=\"Stopwatch__title\">\n        Stopwatch\n      </h1>\n      <p className=\"Stopwatch__clock\">\n        {convertSeconds(seconds)}\n      </p>\n      <div className=\"Stopwatch__buttons\">\n        <Buttons\n          startStopwatchFunc={startStopwatch}\n          stopStopwatchFunc={stopStopwatch}\n          id={timerId}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}