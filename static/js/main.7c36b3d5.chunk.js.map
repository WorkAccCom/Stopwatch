{"version":3,"sources":["components/buttons/Buttons.tsx","App.tsx","index.tsx"],"names":["Buttons","startStopwatchFunc","stopStopwatchFunc","id","wait","reset","useState","startOrStop","startOrStopSwitcher","className","type","onClick","onDoubleClick","App","seconds","changeSecondsValue","timerId","changeTimerId","sec","secondsRest","minutes","minutesRest","hours","convertSeconds","window","setInterval","s","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAUaA,EAA2B,SAAC,GAMlC,IALLC,EAKI,EALJA,mBACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,GACAC,EAEI,EAFJA,KACAC,EACI,EADJA,MAEA,EAA2CC,mBAAS,SAApD,mBAAOC,EAAP,KAAoBC,EAApB,KAyBA,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QA3B2B,WACX,UAAhBJ,GACFC,EAAoB,QACpBP,MAEAO,EAAoB,SACpBN,EAAkBC,KAsBhBM,UAAU,kBAHZ,SAKGF,IAEH,wBACEG,KAAK,SACLE,cAxBoB,WACxBR,EAAKD,GACLK,EAAoB,UAuBhBC,UAAU,kBAHZ,kBAOA,wBACEC,KAAK,SACLC,QA1BqB,WACzBN,EAAMF,GAEc,SAAhBI,GACFN,KAuBEQ,UAAU,kBAHZ,uBCtDOI,EAAgB,WAC3B,MAAsCP,mBAAS,GAA/C,mBAAOQ,EAAP,KAAgBC,EAAhB,KACA,EAAiCT,mBAAS,GAA1C,mBAAOU,EAAP,KAAgBC,EAAhB,KA0CA,OACE,sBAAKR,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,uBAGA,mBAAGA,UAAU,mBAAb,SAtBmB,SAACS,GACtB,IAAMC,EAAcD,EAAM,GACpBE,GAAWF,EAAMC,GAAe,GAChCE,EAAcD,EAAU,GACxBE,GAASF,EAAUC,GAAe,GAExC,MAAM,GAAN,OAEIC,GAAS,GAAKA,EAAd,WAA0BA,GAF9B,YAIID,GAAe,GAAKA,EAApB,WAAsCA,GAJ1C,YAMIF,GAAe,GAAKA,EAApB,WAAsCA,IAWrCI,CAAeT,KAElB,qBAAKL,UAAU,qBAAf,SACE,cAAC,EAAD,CACER,mBAlDe,WACrB,IAAME,EAAKqB,OAAOC,aAChB,kBAAMV,GAAmB,SAACW,GAAD,OAAOA,EAAI,OACpC,KAGFT,EAAcd,IA6CRD,kBA1Cc,SAACC,GACrBqB,OAAOG,cAAcxB,GACrBY,EAAmB,IAyCbZ,GAAIa,EACJZ,KAvCe,SAACD,GACtBqB,OAAOG,cAAcxB,IAuCfE,MApCa,SAACF,GACpBqB,OAAOG,cAAcxB,GACrBY,EAAmB,YCvBvBa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7c36b3d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ninterface Props {\n  startStopwatchFunc: () => void,\n  stopStopwatchFunc: (id: number) => void,\n  id: number,\n  wait: (id: number) => void,\n  reset: (id: number) => void\n}\n\nexport const Buttons: React.FC<Props> = ({\n  startStopwatchFunc,\n  stopStopwatchFunc,\n  id,\n  wait,\n  reset,\n}) => {\n  const [startOrStop, startOrStopSwitcher] = useState('Start');\n\n  const startOrStopOnClickAction = () => {\n    if (startOrStop === 'Start') {\n      startOrStopSwitcher('Stop');\n      startStopwatchFunc();\n    } else {\n      startOrStopSwitcher('Start');\n      stopStopwatchFunc(id);\n    }\n  };\n\n  const waitOnClickAction = () => {\n    wait(id);\n    startOrStopSwitcher('Start');\n  };\n\n  const resetOnClickAction = () => {\n    reset(id);\n\n    if (startOrStop === 'Stop') {\n      startStopwatchFunc();\n    }\n  };\n\n  return (\n    <div className=\"Buttons\">\n      <button\n        type=\"button\"\n        onClick={startOrStopOnClickAction}\n        className=\"Buttons__button\"\n      >\n        {startOrStop}\n      </button>\n      <button\n        type=\"button\"\n        onDoubleClick={waitOnClickAction}\n        className=\"Buttons__button\"\n      >\n        Wait\n      </button>\n      <button\n        type=\"button\"\n        onClick={resetOnClickAction}\n        className=\"Buttons__button\"\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Buttons } from './components/buttons';\n\nexport const App: React.FC = () => {\n  const [seconds, changeSecondsValue] = useState(0);\n  const [timerId, changeTimerId] = useState(0);\n\n  const startStopwatch = () => {\n    const id = window.setInterval(\n      () => changeSecondsValue((s) => s + 1),\n      1000,\n    );\n\n    changeTimerId(id);\n  };\n\n  const stopStopwatch = (id: number) => {\n    window.clearInterval(id);\n    changeSecondsValue(0);\n  };\n\n  const pauseStopwatch = (id: number) => {\n    window.clearInterval(id);\n  };\n\n  const secondsReset = (id: number) => {\n    window.clearInterval(id);\n    changeSecondsValue(0);\n  };\n\n  const convertSeconds = (sec: number) => {\n    const secondsRest = sec % 60;\n    const minutes = (sec - secondsRest) / 60;\n    const minutesRest = minutes % 60;\n    const hours = (minutes - minutesRest) / 60;\n\n    return (\n      `${\n        hours >= 10 ? hours : `0${hours}`\n      }:${\n        minutesRest >= 10 ? minutesRest : `0${minutesRest}`\n      }:${\n        secondsRest >= 10 ? secondsRest : `0${secondsRest}`\n      }`\n    );\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <h1 className=\"Stopwatch__title\">\n        Stopwatch\n      </h1>\n      <p className=\"Stopwatch__clock\">\n        {convertSeconds(seconds)}\n      </p>\n      <div className=\"Stopwatch__buttons\">\n        <Buttons\n          startStopwatchFunc={startStopwatch}\n          stopStopwatchFunc={stopStopwatch}\n          id={timerId}\n          wait={pauseStopwatch}\n          reset={secondsReset}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}